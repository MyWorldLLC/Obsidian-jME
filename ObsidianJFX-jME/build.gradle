plugins {
    id 'java-library'
    id 'maven-publish'
}

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        url 'https://maven.pkg.github.com/MyWorldLLC/Packages'
        credentials {
            username gitUser
            password gitPassword
        }
    }
}

sourceSets {
    main
    example {
        compileClasspath += sourceSets.main.output
        runtimeClasspath += sourceSets.main.output
        java {
            srcDir 'example/java'
        }
    }
}

configurations {
    exampleImplementation.extendsFrom(implementation)
}

dependencies {
    api project(':Obsidian-jME')
    api "com.myworldvw:obsidian-jfx:$obsidianVersion"

    implementation "org.jmonkeyengine:jme3-core:$jmeVersion"
    implementation "org.jmonkeyengine:jme3-desktop:$jmeVersion"
    implementation "org.jmonkeyengine:jme3-effects:$jmeVersion"

    // We need this to compile against any JFX symbols, but this should
    // *not* appear in the POM dependencies. The end user must include a
    // ObsidianJFX platform module to compile their own code.
    compileOnly "com.myworldvw:obsidian-jfx-$platform-$architecture:$obsidianVersion"

    exampleRuntimeOnly "com.myworldvw:obsidian-jfx-all:$obsidianVersion"
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(jdkVersion)
    }
}

group = 'com.myworldvw'
version = gitVersion

publishing {
    publications {
        maven(MavenPublication) {

            groupId = group
            artifactId = 'obsidian-jfx-jme'
            version = version

            from components.java
        }
    }
    repositories {
        mavenLocal()
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/MyWorldLLC/Packages")
            credentials {
                username gitUser
                password gitPassword
            }
        }
    }
}